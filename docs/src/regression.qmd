# Regression

```@meta
CurrentModule = ConformalPrediction
```

```{julia}
#| echo: false
using Pkg; Pkg.activate("docs")
using Plots
theme(:wong)
```

```{julia}
# Regression data:
N = 150
xmax = 8.0
noise = 0.3
X = rand(N) * xmax
ε = randn(N) .* noise
y = @.(sin(X)) + ε

using Plots
scatter(X, y, label="Observed")
xrange = range(0,xmax,length=50)
plot!(xrange, sin.(xrange), lw=4, label="Ground truth")
```

```{julia}
using MLJ
EvoTreeRegressor = @load EvoTreeRegressor pkg=EvoTrees
model = EvoTreeRegressor() 
```

```{julia}
using ConformalPrediction
conf_model = conformal_model(model)
mach = machine(conf_model, X, y)
fit!(mach, rows=train)
```

```{julia}
#| output: true
rows = rand(test, 10)
Xtest = selectrows(X, rows)
ytest = y[rows]
predict(mach, Xtest)
```